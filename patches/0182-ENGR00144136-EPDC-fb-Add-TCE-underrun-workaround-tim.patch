From 7208c85eb6ba83c5fb3add5072516406016d29a2 Mon Sep 17 00:00:00 2001
From: Danny Nold <dannynold@freescale.com>
Date: Tue, 31 May 2011 14:14:57 -0500
Subject: [PATCH 0182/2463] ENGR00144136 - EPDC fb: Add TCE underrun
 workaround timeout

- When synching update submission to EPDC end of frame (when tce_prevent is
defined), we should wait using wait_for_completion_timeout to prevent
hang/deadlock in case we don't receive completion.
- Added call in IST to disable end of frame interrupt upon receiving the
interrupt.

Signed-off-by: Danny Nold <dannynold@freescale.com>
---
 drivers/video/mxc/mxc_epdc_fb.c |    8 +++++++-
 1 files changed, 7 insertions(+), 1 deletions(-)

diff --git a/drivers/video/mxc/mxc_epdc_fb.c b/drivers/video/mxc/mxc_epdc_fb.c
index 52910f7..8d08663 100644
--- a/drivers/video/mxc/mxc_epdc_fb.c
+++ b/drivers/video/mxc/mxc_epdc_fb.c
@@ -2160,7 +2160,12 @@ static void epdc_submit_work_func(struct work_struct *work)
 
 		/* Leave spinlock while waiting for EOF event */
 		spin_unlock_irqrestore(&fb_data->queue_lock, flags);
-		wait_for_completion(&fb_data->eof_event);
+		ret = wait_for_completion_timeout(&fb_data->eof_event,
+			msecs_to_jiffies(1000));
+		if (!ret) {
+			dev_err(fb_data->dev, "Missed EOF event!\n");
+			epdc_eof_intr(false);
+		}
 		udelay(fb_data->eof_sync_period);
 		spin_lock_irqsave(&fb_data->queue_lock, flags);
 
@@ -2889,6 +2894,7 @@ static irqreturn_t mxc_epdc_irq_handler(int irq, void *dev_id)
 
 	/* Check if we are waiting on EOF to sync a new update submission */
 	if (epdc_signal_eof()) {
+		epdc_eof_intr(false);
 		epdc_clear_eof_irq();
 		complete(&fb_data->eof_event);
 	}
-- 
1.7.7.4

