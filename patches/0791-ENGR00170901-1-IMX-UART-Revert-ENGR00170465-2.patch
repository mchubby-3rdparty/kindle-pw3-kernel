From 89c59f201cc73bc1543ee31e6846269d56b40167 Mon Sep 17 00:00:00 2001
From: Huang Shijie <b32955@freescale.com>
Date: Wed, 21 Dec 2011 16:28:53 +0800
Subject: [PATCH 0791/2463] ENGR00170901-1 IMX/UART : Revert "ENGR00170465-2"

This reverts commit 7e5181cd28ac3d786d0760f405fa5a1e3407a7a9.

Signed-off-by: Huang Shijie <b32955@freescale.com>
---
 drivers/tty/serial/imx.c |   17 +----------------
 1 files changed, 1 insertions(+), 16 deletions(-)

diff --git a/drivers/tty/serial/imx.c b/drivers/tty/serial/imx.c
index 7564939..353281e 100644
--- a/drivers/tty/serial/imx.c
+++ b/drivers/tty/serial/imx.c
@@ -136,7 +136,6 @@
 #define  UCR4_OREN  	 (1<<1)  /* Receiver overrun interrupt enable */
 #define  UCR4_DREN  	 (1<<0)  /* Recv data ready interrupt enable */
 #define  UFCR_RXTL_SHF   0       /* Receiver trigger level shift */
-#define  UFCR_RXTL_MASK  0x3f    /* RX FIFO is 6 bits wide */
 #define  UFCR_RFDIV      (7<<7)  /* Reference freq divider mask */
 #define  UFCR_RFDIV_REG(x)	(((x) < 7 ? 6 - (x) : 6) << 7)
 #define  UFCR_TXTL_SHF   10      /* Transmitter trigger level shift */
@@ -189,8 +188,6 @@
 
 #define UART_NR 8
 
-#define UART_RX_SIZE (16)
-
 struct imx_port {
 	struct uart_port	port;
 	struct timer_list	timer;
@@ -599,12 +596,6 @@ static void imx_dma_rxint(struct imx_port *sport)
 	if ((temp & USR2_RDR) && !sport->dma_is_rxing) {
 		sport->dma_is_rxing = true;
 
-		/* increase the RX FIFO threthold. */
-		temp = readl(sport->port.membase + UFCR);
-		temp &= ~(UFCR_RXTL_MASK << UFCR_RXTL_SHF);
-		temp |= UART_RX_SIZE;
-		writel(temp, sport->port.membase + UFCR);
-
 		/* disable the `Recerver Ready Interrrupt` */
 		temp = readl(sport->port.membase + UCR1);
 		temp &= ~(UCR1_RRDYEN);
@@ -790,12 +781,6 @@ static void dma_rx_callback(void *data)
 		temp |= UCR1_RRDYEN;
 		writel(temp, sport->port.membase + UCR1);
 		sport->dma_is_rxing = false;
-
-		/* decrease the RX FIFO threthold. */
-		temp = readl(sport->port.membase + UFCR);
-		temp &= ~(UFCR_RXTL_MASK << UFCR_RXTL_SHF);
-		temp |= RXTL;
-		writel(temp, sport->port.membase + UFCR);
 	}
 }
 
@@ -867,7 +852,7 @@ static int imx_uart_dma_init(struct imx_port *sport)
 	slave_config.direction = DMA_FROM_DEVICE;
 	slave_config.src_addr = sport->port.mapbase + URXD0;
 	slave_config.src_addr_width = DMA_SLAVE_BUSWIDTH_1_BYTE;
-	slave_config.src_maxburst = UART_RX_SIZE;
+	slave_config.src_maxburst = RXTL; /* fix me */
 	ret = dmaengine_slave_config(sport->dma_chan_rx, &slave_config);
 	if (ret) {
 		pr_err("error in RX dma configuration.\n");
-- 
1.7.7.4

