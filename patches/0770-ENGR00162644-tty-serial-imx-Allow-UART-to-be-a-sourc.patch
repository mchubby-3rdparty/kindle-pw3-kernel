From 47b29c16726dd247098213da15c79b388584ef00 Mon Sep 17 00:00:00 2001
From: Fabio Estevam <fabio.estevam@freescale.com>
Date: Mon, 19 Dec 2011 19:11:45 -0200
Subject: [PATCH 0770/2463] ENGR00162644 tty: serial: imx: Allow UART to be a
 source for wakeup

Allow UART to be a source from wakeup from low power mode.

Tested on a mx6sabrelite (where ttymxc1 is the console) by doing:

echo enabled > /sys/devices/platform/imx-uart.1/tty/ttymxc1/power/wakeup

echo mem > /sys/power/state

and then pressing a key in the console will wakeup the system.

Signed-off-by: Fabio Estevam <fabio.estevam@freescale.com>
---
 drivers/tty/serial/imx.c |   42 +++++++++++++-----------------------------
 1 files changed, 13 insertions(+), 29 deletions(-)

diff --git a/drivers/tty/serial/imx.c b/drivers/tty/serial/imx.c
index 57988a5..7564939 100644
--- a/drivers/tty/serial/imx.c
+++ b/drivers/tty/serial/imx.c
@@ -635,10 +635,10 @@ static irqreturn_t imx_int(int irq, void *dev_id)
 
 	if (sts & USR1_RTSD)
 		imx_rtsint(irq, dev_id);
-#ifdef CONFIG_PM
+
 	if (sts & USR1_AWAKE)
 		writel(USR1_AWAKE, sport->port.membase + USR1);
-#endif
+
 	return IRQ_HANDLED;
 }
 
@@ -1072,9 +1072,7 @@ static int imx_startup(struct uart_port *port)
 	}
 
 	tty = sport->port.state->port.tty;
-#ifdef CONFIG_PM
-	device_set_wakeup_enable(tty->dev, 1);
-#endif
+
 	return 0;
 
 error_out3:
@@ -1571,17 +1569,11 @@ static int serial_imx_suspend(struct platform_device *dev, pm_message_t state)
 	struct imx_port *sport = platform_get_drvdata(dev);
 	unsigned int val;
 
-	if (device_may_wakeup(&dev->dev)) {
-		enable_irq_wake(sport->rxirq);
-#ifdef CONFIG_PM
-		if (sport->port.line == 0) {
-			/* enable awake for MX6 */
-			val = readl(sport->port.membase + UCR3);
-			val |= UCR3_AWAKEN;
-			writel(val, sport->port.membase + UCR3);
-		}
-#endif
-	}
+	/* Enable i.MX UART wakeup */
+	val = readl(sport->port.membase + UCR3);
+	val |= UCR3_AWAKEN;
+	writel(val, sport->port.membase + UCR3);
+
 	if (sport)
 		uart_suspend_port(&imx_reg, &sport->port);
 
@@ -1596,16 +1588,11 @@ static int serial_imx_resume(struct platform_device *dev)
 	if (sport)
 		uart_resume_port(&imx_reg, &sport->port);
 
-	if (device_may_wakeup(&dev->dev)) {
-#ifdef CONFIG_PM
-		if (sport->port.line == 0) {
-			val = readl(sport->port.membase + UCR3);
-			val &= ~UCR3_AWAKEN;
-			writel(val, sport->port.membase + UCR3);
-		}
-#endif
-		disable_irq_wake(sport->rxirq);
-	}
+	/* Disable i.MX UART wakeup */
+	val = readl(sport->port.membase + UCR3);
+	val &= ~UCR3_AWAKEN;
+	writel(val, sport->port.membase + UCR3);
+
 	return 0;
 }
 
@@ -1685,9 +1672,6 @@ static int serial_imx_probe(struct platform_device *pdev)
 		goto deinit;
 	platform_set_drvdata(pdev, &sport->port);
 
-#ifdef CONFIG_PM
-	device_init_wakeup(&pdev->dev, 1);
-#endif
 	return 0;
 deinit:
 	if (pdata && pdata->exit)
-- 
1.7.7.4

